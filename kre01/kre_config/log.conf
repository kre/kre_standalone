log4perl.logger = DEBUG, FileApp, Mongo, Buffer
#log4perl.category                   = DEBUG, Buffer

log4perl.appender.FileApp               = Log::Log4perl::Appender::File
log4perl.appender.FileApp.filename  = /web/logs/detail_log
log4perl.appender.FileApp.mode          = append
log4perl.appender.FileApp.owner         = web
log4perl.appender.FileApp.group         = web
log4perl.appender.FileApp.utf8          = 1
log4perl.appender.FileApp.layout        = Log::Log4perl::Layout::PatternLayout
log4perl.appender.FileApp.Threshold = sub {Kynetx::Configure::get_log_threshold()};
log4perl.appender.FileApp.layout.ConversionPattern = \
        %r %X{eid} %p %F{1} %X{site} %X{rule} %m%n

log4perl.appender.Mongo                 = Log::Log4perl::Appender::MongoDB
log4perl.appender.Mongo.server          = sub {Kynetx::Configure::get_config('MONGO_HOST')};
log4perl.appender.Mongo.port            = sub {Kynetx::Configure::get_config('MONGO_PORT')};
log4perl.appender.Mongo.db              = sub {Kynetx::Configure::get_config('MONGO_DB')};
log4perl.appender.Mongo.collection      = sub {Kynetx::Configure::get_config('MONGO_LOG')};
log4perl.appender.Mongo.maxlogs         = sub {Kynetx::Configure::get_config('MONGO_LOG_SIZE')};
log4perl.appender.Mongo.ttl             = sub {Kynetx::Configure::get_config('MONGO_TTL_INDEX')};
log4perl.appender.Mongo.layout  = Log::Log4perl::Layout::PatternLayout
log4perl.appender.Mongo.layout.ConversionPattern = \
        %07r %-12X{eid} %-5p %-16X{site} %-15X{rule} %m%n
log4perl.appender.Mongo.trigger = sub {   \
    my($self, $params) = @_;               \
    return $params->{'message'} =~ /__DEVLOG__/; }

# Regular Screen Appender
log4perl.appender.Screen           = Log::Log4perl::Appender::Screen
log4perl.appender.Screen.stdout    = 0
log4perl.appender.Screen.stderr    = 0
log4perl.appender.Screen.layout    = Log::Log4perl::Layout::PatternLayout::Multiline
log4perl.appender.Screen.layout.ConversionPattern = \
    // %d %p %F{1} %X{site} %X{rule} %m%n

# Screen's Buffer
log4perl.appender.Buffer               = Log::Log4perl::Appender::Buffer
log4perl.appender.Buffer.appender      = Screen
log4perl.appender.Buffer.trigger = sub {   \
    my($self, $params) = @_;               \
    return $params->{'message'} =~ /__SCREEN__/; }